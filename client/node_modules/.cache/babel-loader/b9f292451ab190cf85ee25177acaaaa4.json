{"ast":null,"code":"var _jsxFileName = \"/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js\";\nimport React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport routes from \"../routes\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      // Set token into localstorage\n      localStorage.setItem(\"token\", \"I am now logged in\");\n      this.props.history.push(routes.field);\n    };\n\n    this.handleChange = event => {\n      console.log(event);\n    };\n\n    this.state = {\n      emailValidation: \"\",\n      emailHelp: \"\",\n      passwordValidation: \"\",\n      passwordHelp: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Card, {\n      bordered: false,\n      style: {\n        border: \"1px solid #282828\",\n        boxShadow: \"0px 15px 20px 5px #0000001a\",\n        width: 500 //backgroundColor: \"grey\",\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Midnight Path Planning\"), React.createElement(Form, {\n      hideRequiredMark: true,\n      colon: false,\n      onSubmit: this.handleSubmit,\n      layout: \"vertical\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Email\",\n      validateStatus: \"success\",\n      help: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"john@example.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      size: \"large\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Robot Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"Robot One\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      htmlType: \"submit\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Login\"), \"Or \", React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nexport default Form.create({\n  name: \"Login\"\n})(LoginPage);","map":{"version":3,"sources":["/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js"],"names":["React","Card","Form","Input","Button","routes","LoginPage","Component","constructor","props","handleSubmit","localStorage","setItem","history","push","field","handleChange","event","console","log","state","emailValidation","emailHelp","passwordValidation","passwordHelp","render","border","boxShadow","width","textAlign","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Card, Form, Input, Button} from \"antd\";\nimport routes from \"../routes\";\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailValidation: \"\",\n            emailHelp: \"\",\n            passwordValidation: \"\",\n            passwordHelp: \"\",\n        }\n    }\n\n    handleSubmit = () => {\n        // Set token into localstorage\n        localStorage.setItem(\"token\", \"I am now logged in\");\n        this.props.history.push(routes.field);\n    };\n    handleChange = event => {\n        console.log(event)\n    };\n    render() {\n        return (\n            <Card\n                bordered={false}\n                style={{\n                    border: \"1px solid #282828\",\n                    boxShadow: \"0px 15px 20px 5px #0000001a\",\n                    width: 500,\n                    //backgroundColor: \"grey\",\n                }}\n                >\n                <h1 style={{ textAlign: \"center\" }}>Midnight Path Planning</h1>\n                <Form\n                    hideRequiredMark\n                    colon={false}\n                    onSubmit={this.handleSubmit}\n                    layout=\"vertical\"\n                    onChange={this.handleChange}\n                    >\n                    <Form.Item label=\"Email\" validateStatus=\"success\" help=\"\" onChange={this.handleChange}>\n                        <Input size=\"large\" placeholder=\"john@example.com\" />\n                    </Form.Item>\n                    <Form.Item label=\"Password\">\n                        <Input.Password\n                        size=\"large\"\n                        type=\"password\"\n                        placeholder=\"Password\"/>\n                    </Form.Item>\n                    <Form.Item label=\"Robot Name\">\n                        <Input size=\"large\" placeholder=\"Robot One\" />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button block htmlType=\"submit\" size=\"large\">Login</Button>\n                        Or <a href=\"\">register now!</a>\n                    </Form.Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create({name: \"Login\"})(LoginPage);"]},"metadata":{},"sourceType":"module"}