{"ast":null,"code":"var _jsxFileName = \"/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js\";\nimport React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport routes from \"../routes\";\nimport { UserOutlined, LockOutlined, RobotOutlined } from '@ant-design/icons';\n\nconst Demo = () => {};\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      // Set token into localstorage\n      localStorage.setItem(\"token\", \"I am now logged in\");\n      this.props.history.push(routes.field);\n    };\n\n    this.onEmailChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        emailValue: value\n      });\n\n      if (this.state.emailValue === '') {\n        this.setState({\n          emailValidation: 'error',\n          emailHelp: 'Email is required'\n        });\n      } else {\n        this.setState({\n          emailValidation: '',\n          emailHelp: ''\n        });\n      }\n\n      console.log(\"Email Value: \" + this.state.emailValue);\n    };\n\n    this.onPasswordChange = ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        value\n      });\n      console.log(this.state.value);\n    };\n\n    this.state = {\n      emailValidation: \"\",\n      emailHelp: \"\",\n      passwordValidation: \"\",\n      passwordHelp: \"\",\n      passwordValue: '',\n      emailValue: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Card, {\n      bordered: false,\n      style: {\n        border: \"1px solid #282828\",\n        boxShadow: \"0px 15px 20px 5px #0000001a\",\n        width: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Midnight Path Planning\"), React.createElement(Form, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Form.create({\n  name: \"Login\"\n})(LoginPage);","map":{"version":3,"sources":["/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js"],"names":["React","Card","Form","Input","Button","routes","UserOutlined","LockOutlined","RobotOutlined","Demo","LoginPage","Component","constructor","props","handleSubmit","localStorage","setItem","history","push","field","onEmailChange","target","value","setState","emailValue","state","emailValidation","emailHelp","console","log","onPasswordChange","passwordValidation","passwordHelp","passwordValue","render","border","boxShadow","width","textAlign","remember","required","message","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Card, Form, Input, Button} from \"antd\";\nimport routes from \"../routes\";\nimport { UserOutlined, LockOutlined, RobotOutlined } from '@ant-design/icons';\nconst Demo = () => {\n    \n}\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailValidation: \"\",\n            emailHelp: \"\",\n            passwordValidation: \"\",\n            passwordHelp: \"\",\n            passwordValue: '',\n            emailValue: '',\n        }\n    }\n\n    handleSubmit = () => {\n        // Set token into localstorage\n        localStorage.setItem(\"token\", \"I am now logged in\");\n        this.props.history.push(routes.field);\n    };\n\n    onEmailChange = ({ target: { value } }) => {\n        this.setState({\n            emailValue: value,\n        });\n        if (this.state.emailValue === '') {\n            this.setState({\n                emailValidation: 'error',\n                emailHelp: 'Email is required'\n            })\n        } else {\n            this.setState({\n                emailValidation: '',\n                emailHelp: ''\n            })\n        }\n        console.log(\"Email Value: \" + this.state.emailValue)\n    };\n\n    onPasswordChange = ({ target: { value } }) => {\n        this.setState({ value });\n        console.log(this.state.value);\n    };\n\n    render() {\n        return (\n            <Card\n                bordered={false}\n                style={{\n                    border: \"1px solid #282828\",\n                    boxShadow: \"0px 15px 20px 5px #0000001a\",\n                    width: 500,\n                }}\n                >\n                <h1 style={{ textAlign: \"center\" }}>Midnight Path Planning</h1>\n                <Form\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your username!',\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your password!',\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        );\n    }\n}\n\nexport default Form.create({name: \"Login\"})(LoginPage);"]},"metadata":{},"sourceType":"module"}