{"ast":null,"code":"var _jsxFileName = \"/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js\";\nimport React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport routes from \"../routes\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      // Set token into localstorage\n      localStorage.setItem(\"token\", \"I am now logged in\");\n      this.props.history.push(routes.field);\n    };\n\n    this.state = {\n      emailValidation: \"\",\n      emailHelp: \"\",\n      passwordValidation: \"\",\n      passwordHelp: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      bordered: false,\n      style: {\n        border: \"1px solid #282828\",\n        boxShadow: \"0px 15px 20px 5px #0000001a\",\n        width: 500 //backgroundColor: \"grey\",\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Midnight Path Planning\"), React.createElement(Form, {\n      hideRequiredMark: true,\n      colon: false,\n      onSubmit: this.handleSubmit,\n      layout: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Email\",\n      rules: [{\n        required: true,\n        message: \"Email required\"\n      }],\n      validateStatus: \"success\",\n      help: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"john@example.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: \"Password required\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      size: \"large\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Robot Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"Robot One\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      htmlType: \"submit\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nexport default Form.create({\n  name: \"Login\"\n})(LoginPage);","map":{"version":3,"sources":["/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js"],"names":["React","Card","Form","Input","Button","routes","LoginPage","Component","constructor","props","handleSubmit","localStorage","setItem","history","push","field","state","emailValidation","emailHelp","passwordValidation","passwordHelp","render","border","boxShadow","width","textAlign","required","message","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport routes from \"../routes\";\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailValidation: \"\",\n            emailHelp: \"\",\n            passwordValidation: \"\",\n            passwordHelp: \"\",\n        }\n    }\n   handleSubmit = () => {\n    // Set token into localstorage\n    localStorage.setItem(\"token\", \"I am now logged in\");\n    this.props.history.push(routes.field);\n  };\n   render() {\n       return (\n       <>\n           <Card\n               bordered={false}\n               style={{\n                   border: \"1px solid #282828\",\n                   boxShadow: \"0px 15px 20px 5px #0000001a\",\n                   width: 500,\n                   //backgroundColor: \"grey\",\n               }}\n           >\n               <h1 style={{ textAlign: \"center\" }}>Midnight Path Planning</h1>\n               <Form\n                   hideRequiredMark\n                   colon={false}\n                   onSubmit={this.handleSubmit}\n                   layout=\"vertical\"\n               >\n                   <Form.Item label=\"Email\" rules={[{ required: true, message: \"Email required\" }]} validateStatus=\"success\" help=\"\">\n                       <Input size=\"large\" placeholder=\"john@example.com\" />\n                   </Form.Item>\n                   <Form.Item label=\"Password\" rules={[{ required: true, message: \"Password required\" }]}>\n                       <Input.Password\n                           size=\"large\"\n                           type=\"password\"\n                           placeholder=\"Password\"\n                       />\n                   </Form.Item>\n                   <Form.Item label=\"Robot Name\">\n                       <Input size=\"large\" placeholder=\"Robot One\" />\n                   </Form.Item>\n                   <Form.Item>\n                       <Button block htmlType=\"submit\" size=\"large\">\n                           Login\n                       </Button>\n                   </Form.Item>\n               </Form>\n           </Card>\n       </>\n   );\n   }\n}\n\nexport default Form.create({ name: \"Login\" })(LoginPage);\n"]},"metadata":{},"sourceType":"module"}