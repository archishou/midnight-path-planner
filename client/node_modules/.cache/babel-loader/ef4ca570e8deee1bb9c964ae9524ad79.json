{"ast":null,"code":"var _jsxFileName = \"/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js\";\nimport React from \"react\";\nimport { Card, Form, Input, Button } from \"antd\";\nimport routes from \"../routes\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = () => {\n      // Set token into localstorage\n      localStorage.setItem(\"token\", \"I am now logged in\");\n      this.props.history.push(routes.field);\n    };\n\n    this.handleChange = () => {};\n\n    this.state = {\n      emailValidation: \"\",\n      emailHelp: \"\",\n      passwordValidation: \"\",\n      passwordHelp: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      bordered: false,\n      style: {\n        border: \"1px solid #282828\",\n        boxShadow: \"0px 15px 20px 5px #0000001a\",\n        width: 500 //backgroundColor: \"grey\",\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" Midnight Path Planning \"), \" \", React.createElement(Form, {\n      hideRequiredMark: true,\n      colon: false,\n      onSubmit: this.handleSubmit,\n      layout: \"vertical\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Email\",\n      rules: [{\n        required: true,\n        message: \"Email required\"\n      }],\n      validateStatus: \"success\",\n      help: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"john@example.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), \" \", React.createElement(Form.Item, {\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: \"Password required\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      size: \"large\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), \" \", React.createElement(Form.Item, {\n      label: \"Robot Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Input, {\n      size: \"large\",\n      placeholder: \"Robot One\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), \" \", React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      block: true,\n      htmlType: \"submit\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Login \"), \" \"), \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default Form.create({\n  name: \"Login\"\n})(LoginPage);","map":{"version":3,"sources":["/Users/Archish/Documents/CodeProjects/Go/src/midnight-path-planner/client/src/pages/LoginPage.js"],"names":["React","Card","Form","Input","Button","routes","LoginPage","Component","constructor","props","handleSubmit","localStorage","setItem","history","push","field","handleChange","state","emailValidation","emailHelp","passwordValidation","passwordHelp","render","border","boxShadow","width","textAlign","required","message","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Card,\n    Form,\n    Input,\n    Button\n} from \"antd\";\nimport routes from \"../routes\";\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailValidation: \"\",\n            emailHelp: \"\",\n            passwordValidation: \"\",\n            passwordHelp: \"\",\n        }\n    }\n    handleSubmit = () => {\n        // Set token into localstorage\n        localStorage.setItem(\"token\", \"I am now logged in\");\n        this.props.history.push(routes.field);\n    };\n    handleChange = () => {\n\n    }\n    render() {\n        return ( <\n            >\n            <\n            Card bordered = {\n                false\n            }\n            style = {\n                {\n                    border: \"1px solid #282828\",\n                    boxShadow: \"0px 15px 20px 5px #0000001a\",\n                    width: 500,\n                    //backgroundColor: \"grey\",\n                }\n            } >\n            <\n            h1 style = {\n                {\n                    textAlign: \"center\"\n                }\n            } > Midnight Path Planning < /h1> <\n            Form hideRequiredMark colon = {\n                false\n            }\n            onSubmit = {\n                this.handleSubmit\n            }\n            layout = \"vertical\"\n            onChange = {\n                this.handleChange\n            } >\n            <\n            Form.Item label = \"Email\"\n            rules = {\n                [{\n                    required: true,\n                    message: \"Email required\"\n                }]\n            }\n            validateStatus = \"success\"\n            help = \"\" >\n            <\n            Input size = \"large\"\n            placeholder = \"john@example.com\" / >\n            <\n            /Form.Item> <\n            Form.Item label = \"Password\"\n            rules = {\n                [{\n                    required: true,\n                    message: \"Password required\"\n                }]\n            } >\n            <\n            Input.Password size = \"large\"\n            type = \"password\"\n            placeholder = \"Password\" /\n            >\n            <\n            /Form.Item> <\n            Form.Item label = \"Robot Name\" >\n            <\n            Input size = \"large\"\n            placeholder = \"Robot One\" / >\n            <\n            /Form.Item> <\n            Form.Item >\n            <\n            Button block htmlType = \"submit\"\n            size = \"large\" >\n            Login <\n            /Button> <\n            /Form.Item> <\n            /Form> <\n            /Card> <\n            />\n        );\n    }\n}\n\nexport default Form.create({\n    name: \"Login\"\n})(LoginPage);"]},"metadata":{},"sourceType":"module"}